@page "/posts"
@using ApiContracts
@using BlazorApp.Services
@inject IPostService PostService
@inject NavigationManager Navigation

<h3>Create Post</h3>

<EditForm Model="@newPost" OnValidSubmit="@CreatePost">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="userId">User ID:</label>
        <InputText id="userId" class="form-control" @bind-Value="userIdString" />
    </div>
    <div class="form-group">
        <label for="title">Title:</label>
        <InputText id="title" class="form-control" @bind-Value="newPost.Title" />
    </div>
    <div class="form-group">
        <label for="content">Content:</label>
        <InputTextArea id="content" class="form-control" @bind-Value="newPost.Body" />
    </div>

    <button type="submit" class="btn btn-primary">Create Post</button>
</EditForm>

@if (createdPost != null)
{
    <h4>Post Created</h4>
    <p>Title: @createdPost.Title</p>
    <p>Content: @createdPost.Body</p>
}

<h3>Posts</h3>
<ul>
    @foreach (var post in posts)
    {
        <li @onclick="() => NavigateToPost(post.PostId)">
            <h4>@post.Title</h4>
            <p>@post.Body.Substring(0, Math.Min(post.Body.Length, 100))...</p>
        </li>
    }
</ul>

@code {
    private CreatePostDto newPost = new CreatePostDto();
    private GetPostDto? createdPost;
    private string userIdString = string.Empty;
    private List<GetPostDto> posts = new();

    protected override async Task OnInitializedAsync() {
        posts = (await PostService.GetPostsAsync()).ToList();
    }

    private async Task CreatePost() {
        newPost.UserId = int.Parse(userIdString);
        createdPost = await PostService.CreatePostAsync(newPost);
        posts.Add(createdPost);
        Console.WriteLine(createdPost.Title);
    }

    private void NavigateToPost(int postId) {
        Navigation.NavigateTo($"/posts/{postId}");
    }
}